.TH SIMPLE_SHELL 1 "January 2025" "Version 1.0" "User Commands"
.SH NAME
simple_shell \- A simplified Unix shell implementation in C.
.SH SYNOPSIS
.B simple_shell
.RI [ command ]
.SH DESCRIPTION
.B simple_shell
is a basic shell implemented in C that supports command execution, environment variable handling, and input processing. It provides functionalities similar to a minimal Unix terminal.
.SH FEATURES
- Execution of user-input commands via child processes.
- Support for custom commands like
.B exit
to quit the shell.
- Display of environment variables using the
.B env
command.
- Path resolution for system executables.
- Input cleaning and argument splitting for better command handling.
.SH IMPLEMENTATION DETAILS
The following key system calls and functions are used in the implementation:
.TP
.B fork()
Creates a child process to execute user commands.
.TP
.B execve()
Executes the specified command in the child process.
.TP
.B wait()
Allows the parent process to wait for the child process to complete.
.TP
.B environ
A global array for accessing environment variables.
.SH FILES
.B shell.h
Header file containing function declarations and required libraries.
.SH FUNCTIONS
The shell implements the following main functions:
.TP
.B void fork_wait_exec(char *command, char **env, char *prog_name)
Executes a command by creating a child process, replacing its image with
.B execve()
, and waiting for completion.
.TP
.B char *resolve_path(char *command)
Finds the absolute path of a command by iterating through the
.B PATH
environment variable.
.TP
.B int handle_exit(char *command)
Checks if the user entered the
.B exit
command to terminate the shell.
.TP
.B char *clean_command(char *command)
Removes unnecessary spaces and characters from the input.
.TP
.B char **split_command(char *command)
Splits the input command into an array of arguments for execution.
.TP
.B void print_env(void)
Displays all environment variables by iterating through the
.B environ
array.
.SH COMPILATION
To compile the source code, use:
.EX
gcc -Wall -Werror -Wextra -pedantic *.c -o simple_shell
.EE
.SH USAGE
Run the program:
.EX
./simple_shell
.EE
Enter commands like
.B ls
or
.B pwd
. Use
.B exit
to quit the shell.
.SH EXAMPLES
Run the shell:
.EX
$ ./simple_shell
$ ls -l
<file listing>
$ env
<environment variables>
$ exit
.EE
.SH DEPENDENCIES
- GCC: A C compiler for building the project.
- Linux or POSIX-compatible system: Required for system calls like
.B fork()
and
.B execve()
.
.SH AUTHORS
Erwan Pasqier and Matteo Foti.
.SH LICENSE
This project is distributed under the MIT License. Refer to the LICENSE file for more details.
.SH SEE ALSO
.B bash(1),
.B sh(1)